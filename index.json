[
{
	"uri": "http://example.org/web/static-site-generators/hugo/commands/",
	"title": "Commands",
	"tags": [],
	"description": "",
	"content": "Create site :   Create site \u0026ldquo;documentation\u0026rdquo;:\nhugo new site documentation   Launch server (with autoreload) :\nhugo server   http://localhost:1313\nInstall a theme :   Install theme :\ncd /themes git clone https://github.com/matcornic/hugo-theme-learn.git   Activate new theme in config.toml :\ntheme = \u0026#34;hugo-theme-learn\u0026#34;   Create first post :   Create chapter (contains post) static-website-generators\ncd .. hugo new --kind chapter static-website-generators/_index.md   Create post hugo in chapter static-website-generators :\nhugo new static-website-generators/hugo.md   Deploy  Build : hugo   Build result in /public\n"
},
{
	"uri": "http://example.org/web/static-site-generators/hugo/settings/",
	"title": "Settings",
	"tags": [],
	"description": "",
	"content": "Build destination folder Set build destination folder (config.toml) to docs instead of public:\npublishDir = \u0026#34;docs\u0026#34; "
},
{
	"uri": "http://example.org/web/static-site-generators/hugo/themes/learn/settings/",
	"title": "Settings",
	"tags": [],
	"description": "",
	"content": "Change logo Create file /layouts/partials/logo.html :\n\u0026lt;img style=\u0026#34;border-radius: 50%; max-width: 70%;\u0026#34; src=\u0026#34;https://avatars.githubusercontent.com/u/22755712?v=4\u0026#34;\u0026gt; "
},
{
	"uri": "http://example.org/web/static-site-generators/hugo/deployment/",
	"title": "Deployment",
	"tags": [],
	"description": "",
	"content": "On gitHub Pages : SOURCE.\n  Test git submodules in repository (Hugo theme could be a git submodule).\n  Activate relative URL in Hugo settings.\n  Activate pages on GitHub repository.\n  Set GitHub pages branch to docs.\n  Create GitHub Token.\n  Add token as secret into repository.\n  Activate auto build on push -\u0026gt; see \u0026ldquo;Tools \u0026gt; GitHub \u0026gt; Actions (workflow)\u0026rdquo;.\n  "
},
{
	"uri": "http://example.org/web/static-site-generators/hugo/themes/learn/",
	"title": "Learn",
	"tags": [],
	"description": "",
	"content": "Documentation\n  Change theme color (config.toml) : [params] # Change default color scheme with a variant one. Can be \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;blue\u0026#34;   "
},
{
	"uri": "http://example.org/web/static-site-generators/hugo/themes/",
	"title": "Themes",
	"tags": [],
	"description": "",
	"content": "For documentation    2021_05_17 Licence     Learn     "
},
{
	"uri": "http://example.org/web/static-site-generators/hugo/troubleshoot/",
	"title": "Troubleshoot",
	"tags": [],
	"description": "",
	"content": "404 on css, js : Activate relative URL instead of absolute (default) :\nconfig.toml :\nrelativeURLs = true "
},
{
	"uri": "http://example.org/web/pwa-progressive-web-app/setup/",
	"title": "Setup",
	"tags": [],
	"description": "",
	"content": "  Create basic HTML \u0026amp; CSS for the future WPA : a. index.html\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Hello World\u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/style.css\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;theme-color\u0026#34; content=\u0026#34;white\u0026#34;/\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body class=\u0026#34;fullscreen\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;h1 class=\u0026#34;title\u0026#34;\u0026gt;Hello World!\u0026lt;/h1\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; b. css/style.css\nbody { font-family: sans-serif; } /* Make content area fill the entire browser window */ html, .fullscreen { display: flex; height: 100%; margin: 0; padding: 0; width: 100%; } /* Center the content in the browser window */ .container { margin: auto; text-align: center; } .title { font-size: 3rem; }   Serve in a webserver (apache, nginx\u0026hellip;) as HTTPS (valid certificate) -\u0026gt; Tuto create valid https local.\n  manifest.json\na. Create manifest.json :\n{ \u0026#34;name\u0026#34;: \u0026#34;Hello World\u0026#34;, \u0026#34;short_name\u0026#34;: \u0026#34;Hello\u0026#34;, \u0026#34;lang\u0026#34;: \u0026#34;en-US\u0026#34;, \u0026#34;start_url\u0026#34;: \u0026#34;./index.html\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;standalone\u0026#34;, \u0026#34;theme_color\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;background_color\u0026#34;: \u0026#34;#ffffff\u0026#34; } b. Import manifest.json in index.html :\n\u0026lt;link rel=\u0026#34;manifest\u0026#34; href=\u0026#34;./manifest.json\u0026#34;\u0026gt; \u0026lt;/head\u0026gt;   Generate icons with https://realfavicongenerator.net/ :\na. Copy all link and meta (except manifest) in HEAD of index.html\nb. Extract downloaded package in /images.\nc. copy icons key from /images/site.webmanifest.json to manifest.json.\nd. Adapt icons url if necessary.\ne. delete /images/site.webmanifest.json.\n  Service Worker :\na. Install Google workbox CLI :\nnpm install workbox-cli --global b. Run workbox wizard (will create config file ../workbox-config.js) :\ncd .. workbox wizard c. Generate Service Worker (sw.js) from config file :\nworkbox generateSW workbox-config.js d. Create js/main.js to load Service Worker (sw.js) :\nwindow.onload = () =\u0026gt; { \u0026#39;use strict\u0026#39;; if (\u0026#39;serviceWorker\u0026#39; in navigator) { navigator.serviceWorker .register(\u0026#39;./sw.js\u0026#39;); } } e. Import js/main.js in index.html :\n\u0026lt;script src=\u0026#34;js/main.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt;   "
},
{
	"uri": "http://example.org/web/pwa-progressive-web-app/notifications/",
	"title": "Notifications",
	"tags": [],
	"description": "",
	"content": "https://developer.mozilla.org/fr/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\n-Notification API (different of push API)\n"
},
{
	"uri": "http://example.org/web/pwa-progressive-web-app/",
	"title": "PWA (Progressive Web App)",
	"tags": [],
	"description": "",
	"content": "Sources Official guide : Progressive Web Apps Training\nTutorials :\n  Tutoriel PWA: Comment convertir votre site Web en PWA\n  A Simple Progressive Web App Tutorial\n  Librairies :          Workbox (google) reference (2021_05_15)   sw-precache depreciated (2021_05_15)     Sections : Setup PWAv notifications\n"
},
{
	"uri": "http://example.org/",
	"title": "Home",
	"tags": [],
	"description": "",
	"content": "IT Documentation Arnaud BALEY "
},
{
	"uri": "http://example.org/coding/",
	"title": "Coding",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/tools/git/",
	"title": "Git",
	"tags": [],
	"description": "",
	"content": "Git Submodules (nested repositories) Test :\ngit submodule status Add submodule .gitmodules:\n[submodule \u0026quot;themes/hugo-theme-learn\u0026quot;] path = themes/hugo-theme-learn url = git://github.com/matcornic/hugo-theme-learn "
},
{
	"uri": "http://example.org/tools/github/",
	"title": "GitHub",
	"tags": [],
	"description": "",
	"content": "Activate pages -Repository -\u0026gt; Settings -\u0026gt; Options -\u0026gt; GitHub Pages\nActions (workflow) Create file : .github/workflows/workflow.yml\nExample (auto build hugo static site generator on push) :\nname: CI on: push jobs: deploy: runs-on: ubuntu-18.04 steps: - name: Git checkout uses: actions/checkout@v2 - name: Update theme  run: git submodule update --init --recursive - name: Setup hugo uses: peaceiris/actions-hugo@v2 - name: Build run: hugo - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: personal_token: ${{ secrets.TOKEN }}  publish_dir: ./public keep_files: true publish_branch: docs "
},
{
	"uri": "http://example.org/web/static-site-generators/hugo/",
	"title": "Hugo",
	"tags": [],
	"description": "",
	"content": "Sources Official guide : getting started\nTutorials :\n Comment cr√©er un site avec Hugo partie 1 : intro et configurations   Tricks Activate full search (not only menu items) config.toml :\n[outputs] home = [ \u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] Change order in menu -keyword weight :\n--- title: \u0026quot;Commands\u0026quot; date: 2021-05-18T15:55:39+02:00 draft: false weight: 1 --- "
},
{
	"uri": "http://example.org/coding/languages/",
	"title": "Languages",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/web/static-site-generators/",
	"title": "Static Site Generators",
	"tags": [],
	"description": "",
	"content": "   2021_05_17  Gatsby Hugo Jekyll     Learning curve  higher lesser    Language  JavaScript Go Ruby   Based on framework  React Go Liquid   Features  More Less    Plugins  To install lot of already included    Build speed  100 ms 15 sec      Usage :  Documentation website -\u0026gt; Hugo  "
},
{
	"uri": "http://example.org/tools/",
	"title": "Tools",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/web/",
	"title": "Web",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]