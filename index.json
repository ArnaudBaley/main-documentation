[
{
	"uri": "http://example.org/web/static-site-generators/hugo/commands/",
	"title": "Commands",
	"tags": [],
	"description": "",
	"content": "Create site :   Create site \u0026ldquo;documentation\u0026rdquo;:\nhugo new site documentation   Launch server (with autoreload) :\nhugo server   http://localhost:1313\nInstall a theme :   Install theme :\ncd /themes git clone https://github.com/matcornic/hugo-theme-learn.git   Activate new theme in config.toml :\ntheme = \u0026#34;hugo-theme-learn\u0026#34;   Create first post :   Create chapter (contains post) static-website-generators\ncd .. hugo new --kind chapter static-website-generators/_index.md   Create post hugo in chapter static-website-generators :\nhugo new static-website-generators/hugo.md   Deploy  Build : hugo   Build result in /public\n"
},
{
	"uri": "http://example.org/web/static-site-generators/hugo/settings/",
	"title": "Settings",
	"tags": [],
	"description": "",
	"content": "Build destination folder Set build destination folder (config.toml) to docs instead of public:\npublishDir = \u0026#34;docs\u0026#34; "
},
{
	"uri": "http://example.org/web/static-site-generators/hugo/themes/learn/settings/",
	"title": "Settings",
	"tags": [],
	"description": "",
	"content": "Change logo Create file /layouts/partials/logo.html :\n\u0026lt;img style=\u0026#34;border-radius: 50%; max-width: 70%;\u0026#34; src=\u0026#34;https://avatars.githubusercontent.com/u/22755712?v=4\u0026#34;\u0026gt; "
},
{
	"uri": "http://example.org/web/static-site-generators/hugo/deployment/",
	"title": "Deployment",
	"tags": [],
	"description": "",
	"content": "On gitHub Pages : SOURCE.\n  Test git submodules in repository (Hugo theme could be a git submodule).\n  Activate relative URL in Hugo settings.\n  Activate pages on GitHub repository.\n  Set GitHub pages branch to docs.\n  Create GitHub Token.\n  Add token as secret into repository.\n  Activate auto build on push -\u0026gt; see \u0026ldquo;Tools \u0026gt; GitHub \u0026gt; Actions (workflow)\u0026rdquo;.\n  "
},
{
	"uri": "http://example.org/web/static-site-generators/hugo/themes/learn/",
	"title": "Learn",
	"tags": [],
	"description": "",
	"content": "Documentation\n  Change theme color (config.toml) : [params] # Change default color scheme with a variant one. Can be \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;blue\u0026#34;   "
},
{
	"uri": "http://example.org/web/static-site-generators/hugo/themes/",
	"title": "Themes",
	"tags": [],
	"description": "",
	"content": "For documentation    2021_05_17 Licence     Learn     "
},
{
	"uri": "http://example.org/web/static-site-generators/hugo/troubleshoot/",
	"title": "Troubleshoot",
	"tags": [],
	"description": "",
	"content": "404 on css, js : Activate relative URL instead of absolute (default) :\nconfig.toml :\nrelativeURLs = true "
},
{
	"uri": "http://example.org/web/pwa-progressive-web-app/setup/",
	"title": "Setup",
	"tags": [],
	"description": "",
	"content": "  Create basic HTML \u0026amp; CSS for the future WPA : a. index.html\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Hello World\u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/style.css\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;theme-color\u0026#34; content=\u0026#34;white\u0026#34;/\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body class=\u0026#34;fullscreen\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;h1 class=\u0026#34;title\u0026#34;\u0026gt;Hello World!\u0026lt;/h1\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; b. css/style.css\nbody { font-family: sans-serif; } /* Make content area fill the entire browser window */ html, .fullscreen { display: flex; height: 100%; margin: 0; padding: 0; width: 100%; } /* Center the content in the browser window */ .container { margin: auto; text-align: center; } .title { font-size: 3rem; }   Serve in a webserver (apache, nginx\u0026hellip;) as HTTPS (valid certificate) -\u0026gt; Tuto create valid https local.\n  manifest.json\na. Create manifest.json :\n{ \u0026#34;name\u0026#34;: \u0026#34;Hello World\u0026#34;, \u0026#34;short_name\u0026#34;: \u0026#34;Hello\u0026#34;, \u0026#34;lang\u0026#34;: \u0026#34;en-US\u0026#34;, \u0026#34;start_url\u0026#34;: \u0026#34;./index.html\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;standalone\u0026#34;, \u0026#34;theme_color\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;background_color\u0026#34;: \u0026#34;#ffffff\u0026#34; } b. Import manifest.json in index.html :\n\u0026lt;link rel=\u0026#34;manifest\u0026#34; href=\u0026#34;./manifest.json\u0026#34;\u0026gt; \u0026lt;/head\u0026gt;   Generate icons with https://realfavicongenerator.net/ :\na. Copy all link and meta (except manifest) in HEAD of index.html\nb. Extract downloaded package in /images.\nc. copy icons key from /images/site.webmanifest.json to manifest.json.\nd. Adapt icons url if necessary.\ne. delete /images/site.webmanifest.json.\n  Service Worker :\na. Install Google workbox CLI :\nnpm install workbox-cli --global b. Run workbox wizard (will create config file ../workbox-config.js) :\ncd .. workbox wizard c. Generate Service Worker (sw.js) from config file :\nworkbox generateSW workbox-config.js d. Create js/main.js to load Service Worker (sw.js) :\nwindow.onload = () =\u0026gt; { \u0026#39;use strict\u0026#39;; if (\u0026#39;serviceWorker\u0026#39; in navigator) { navigator.serviceWorker .register(\u0026#39;./sw.js\u0026#39;); } } e. Import js/main.js in index.html :\n\u0026lt;script src=\u0026#34;js/main.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt;   "
},
{
	"uri": "http://example.org/web/pwa-progressive-web-app/notifications/",
	"title": "Notifications",
	"tags": [],
	"description": "",
	"content": "https://developer.mozilla.org/fr/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\n-Notification API (different of push API)\nExample of notification (without push) :\nwindow.onload = () =\u0026gt; { \u0026#39;use strict\u0026#39;; if (\u0026#39;serviceWorker\u0026#39; in navigator) { navigator.serviceWorker .register(\u0026#39;./sw.js\u0026#39;); } requestNotifPermission(); } const games = [{ slug: \u0026#39;lost-in-cyberspace\u0026#39;, name: \u0026#39;Lost in Cyberspace\u0026#39;, author: \u0026#39;Zosia and Bartek\u0026#39;, twitter: \u0026#39;bartaz\u0026#39;, website: \u0026#39;\u0026#39;, github: \u0026#39;github.com/bartaz/lost-in-cyberspace\u0026#39; }, { slug: \u0026#39;vernissage\u0026#39;, name: \u0026#39;Vernissage\u0026#39;, author: \u0026#39;Platane\u0026#39;, twitter: \u0026#39;platane_\u0026#39;, website: \u0026#39;github.com/Platane\u0026#39;, github: \u0026#39;github.com/Platane/js13k-2017\u0026#39; }, { slug: \u0026#39;emma-3d\u0026#39;, name: \u0026#39;Emma-3D\u0026#39;, author: \u0026#39;Prateek Roushan\u0026#39;, twitter: \u0026#39;\u0026#39;, website: \u0026#39;\u0026#39;, github: \u0026#39;github.com/coderprateek/Emma-3D\u0026#39; } ]; function requestNotifPermission() { Notification.requestPermission().then(function (result) { if (result === \u0026#39;granted\u0026#39;) { randomNotification(); } }); } function randomNotification() { var randomItem = Math.floor(Math.random() * games.length); var notifTitle = games[randomItem].name; var notifBody = \u0026#39;Créé par \u0026#39; + games[randomItem].author + \u0026#39;.\u0026#39;; var notifImg = \u0026#39;data/img/\u0026#39; + games[randomItem].slug + \u0026#39;.jpg\u0026#39;; var options = { body: notifBody, icon: notifImg } navigator.serviceWorker.ready.then(registration =\u0026gt; { registration.showNotification(\u0026#39;Hello world!\u0026#39;, options); }) setTimeout(randomNotification, 5000); } "
},
{
	"uri": "http://example.org/web/pwa-progressive-web-app/",
	"title": "PWA (Progressive Web App)",
	"tags": [],
	"description": "",
	"content": "Sources Official guide : Progressive Web Apps Training\nTutorials :\n  Tutoriel PWA: Comment convertir votre site Web en PWA\n  A Simple Progressive Web App Tutorial\n  Librairies :          Workbox (google) reference (2021_05_15)   sw-precache depreciated (2021_05_15)     Sections : Setup PWAv notifications\n"
},
{
	"uri": "http://example.org/",
	"title": "Home",
	"tags": [],
	"description": "",
	"content": "IT Documentation Arnaud BALEY "
},
{
	"uri": "http://example.org/coding/languages/javascript/array/",
	"title": "Array",
	"tags": [],
	"description": "",
	"content": "Extract part of an array or a string (new array) -\u0026gt; slice() const array = \u0026#39;hello world\u0026#39;; const result = array.slice(0,5); console.log(result); // hello Remove part of an array (replace array) -\u0026gt; splice() const array = [\u0026#39;h\u0026#39;,\u0026#39;e\u0026#39;,\u0026#39;l\u0026#39;,\u0026#39;l\u0026#39;,\u0026#39;o\u0026#39;]; const result = array.splice(0, 3); console.log(result); // hel "
},
{
	"uri": "http://example.org/coding/languages/javascript/class/",
	"title": "Class",
	"tags": [],
	"description": "",
	"content": "TODO "
},
{
	"uri": "http://example.org/coding/",
	"title": "Coding",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/coding/languages/javascript/design-patterns/",
	"title": "Design Patterns",
	"tags": [],
	"description": "",
	"content": "Sources :\n JavaScript Design Patterns (BetterProgramming)  List            Module Organize code, encapsulation.     Observer Update an object when an another object changes (see : $emit et $broadcast in JS frameworks).     Prototype “skeleton” of an existing object to create or instantiate new objects.     Singleton Only one instance of a singleton class can exist     Constructor Based on class. Execute code at class instantiation.     Factoy Class with generic interface that delegates the responsibility of object instantiation to its subclasses. Need to manage or manipulate collections of objects that are different yet have many similar characteristics.    Strategy Encapsulates algorithms in such a way that they are interchangeable at runtime     Adapter      Composite      Decorator      Façade      Flyweight      Proxy      Chain of Responsibility      Command      Iterator      Mediator      State      Template       Singleton class Database { constructor(data) { if (Database.exists) { return Database.instance; } this._data = data; Database.instance = this; Database.exists = true; return this; } getData() { return this._data; } setData(data) { this._data = data; } } // usage const mongo = new Database(\u0026#39;mongo\u0026#39;); console.log(mongo.getData()); // mongo  const mysql = new Database(\u0026#39;mysql\u0026#39;); console.log(mysql.getData()); // mongo Factory class BallFactory { constructor() { this.createBall = function(type) { let ball; if (type === \u0026#39;football\u0026#39; || type === \u0026#39;soccer\u0026#39;) ball = new Football(); else if (type === \u0026#39;basketball\u0026#39;) ball = new Basketball(); ball.roll = function() { return `The ${this._type}is rolling.`; }; return ball; }; } } class Football { constructor() { this._type = \u0026#39;football\u0026#39;; this.kick = function() { return \u0026#39;You kicked the football.\u0026#39;; }; } } class Basketball { constructor() { this._type = \u0026#39;basketball\u0026#39;; this.bounce = function() { return \u0026#39;You bounced the basketball.\u0026#39;; }; } } // creating objects const factory = new BallFactory(); const myFootball = factory.createBall(\u0026#39;football\u0026#39;); const myBasketball = factory.createBall(\u0026#39;basketball\u0026#39;); console.log(myFootball.roll()); // The football is rolling. console.log(myBasketball.roll()); // The basketball is rolling. console.log(myFootball.kick()); // You kicked the football. console.log(myBasketball.bounce()); // You bounced the basketball. "
},
{
	"uri": "http://example.org/tools/docker/",
	"title": "Docker",
	"tags": [],
	"description": "",
	"content": "host IP from container\nsudo ip addr show docker0 Shell in container\ndocker exec -it \u0026lt;container name\u0026gt; /bin/bash Extract container id from name :\n$(docker ps -qlf \u0026#34;name=stack-dev_cherm\u0026#34;) Copy file in container\nPrerequisite : create destination folder in container :\nmkdir retourpatrimoine cat /home/arnaudb/Bureau/DATA/PROJETS/BATCH/retourPatrimoine_creerCompteServeurAuth/adherent_lfm_888888_O.csv | docker exec -i $(docker ps -qlf \u0026#34;name=stack-dev_cherm\u0026#34;) /bin/bash -c \u0026#39;cat \u0026gt; /data/retourpatrimoine/adherent_lfm_888888_O.csv\u0026#39; Show full error at service mount :\ndocker service ps --no-trunc mysql "
},
{
	"uri": "http://example.org/tools/git/",
	"title": "Git",
	"tags": [],
	"description": "",
	"content": "Git Submodules (nested repositories) Test :\ngit submodule status Add submodule .gitmodules:\n[submodule \u0026quot;themes/hugo-theme-learn\u0026quot;] path = themes/hugo-theme-learn url = git://github.com/matcornic/hugo-theme-learn "
},
{
	"uri": "http://example.org/tools/github/",
	"title": "GitHub",
	"tags": [],
	"description": "",
	"content": "Activate pages -Repository -\u0026gt; Settings -\u0026gt; Options -\u0026gt; GitHub Pages\nActions (workflow) Create file : .github/workflows/workflow.yml\nExample (auto build hugo static site generator on push) :\nname: CI on: push jobs: deploy: runs-on: ubuntu-18.04 steps: - name: Git checkout uses: actions/checkout@v2 - name: Update theme  run: git submodule update --init --recursive - name: Setup hugo uses: peaceiris/actions-hugo@v2 - name: Build run: hugo - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: personal_token: ${{ secrets.TOKEN }}  publish_dir: ./public keep_files: true publish_branch: docs "
},
{
	"uri": "http://example.org/web/static-site-generators/hugo/",
	"title": "Hugo",
	"tags": [],
	"description": "",
	"content": "Sources Official guide : getting started\nTutorials :\n Comment créer un site avec Hugo partie 1 : intro et configurations   Tricks Activate full search (not only menu items) config.toml :\n[outputs] home = [ \u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] Change order in menu -keyword weight :\n--- title: \u0026quot;Commands\u0026quot; date: 2021-05-18T15:55:39+02:00 draft: false weight: 1 --- "
},
{
	"uri": "http://example.org/coding/languages/javascript/",
	"title": "JavaScript",
	"tags": [],
	"description": "",
	"content": "Links :  JSFiddle (JS online environmnent )  "
},
{
	"uri": "http://example.org/coding/jest/",
	"title": "Jest (Unit test)",
	"tags": [],
	"description": "",
	"content": "Boilerplate : import errorUtil from \u0026#39;../../../src/public/utils/errorUtil\u0026#39;; describe(\u0026#39;detectNetworkError\u0026#39;, () =\u0026gt; { test(\u0026#39;detectNetworkError : wrong parameters\u0026#39;, () =\u0026gt; { expect(errorUtil.detectNetworkError()).toBe(null); }); }); Expect to throw error : synchronous :\nexpect(() =\u0026gt; list.clickButton()).toThrow(\u0026#39;incorrect param \u0026#34;action\u0026#34;\u0026#39;); asynchronous :\nexpect(list.clickButton()).rejects.toEqual(new Error(\u0026#39;incorrect param \u0026#34;action\u0026#34;\u0026#39;)); "
},
{
	"uri": "http://example.org/coding/languages/javascript/jsdoc/",
	"title": "JSdoc",
	"tags": [],
	"description": "",
	"content": "/** * Returns x raised to the n-th power. * * @param {number} x The number to raise. * @param {number} n The power, must be a natural number. * @return {number} x raised to the n-th power. */ "
},
{
	"uri": "http://example.org/learning/js-kata/",
	"title": "Kata JS",
	"tags": [],
	"description": "",
	"content": "Even Or Odd : function even_or_odd(number) { if (number % 2 === 0) return \u0026#39;Even\u0026#39;; return \u0026#39;Odd\u0026#39;; } console.log(even_or_odd(4)) // Even console.log(even_or_odd(5)) // Odd Opposite number : function opposite(number) { return -number } console.log(opposite(5)) // -5 Remove first and last char of string : function removeChar(str){ return str.slice(1,(str.length - 1)) }; console.log(removeChar(\u0026#39;eloquent\u0026#39;)); // loquen; "
},
{
	"uri": "http://example.org/coding/languages/",
	"title": "Languages",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/learning/",
	"title": "Learning",
	"tags": [],
	"description": "",
	"content": "Training :  Algo -\u0026gt; Codewars  Prepare interview :   The System Design Primer\n  Coding Interview University\n  Interviews\n  "
},
{
	"uri": "http://example.org/coding/languages/javascript/loop/",
	"title": "Loop",
	"tags": [],
	"description": "",
	"content": "for let str = \u0026#39;\u0026#39;; for (let i = 0; i \u0026lt; 9; i++) { str = str + i; } console.log(str); // expected output: \u0026#34;012345678\u0026#34; "
},
{
	"uri": "http://example.org/coding/languages/markdown/",
	"title": "Markdown",
	"tags": [],
	"description": "",
	"content": "Table With header     Gatsby Hugo Jekyll     Learning curve higher lesser    Language JavaScript Go Ruby    | | Gatsby | Hugo | Jekyll | ----------- |----------- | ----------- | ----------- | | Learning curve | higher | lesser | | Language | JavaScript | Go | Ruby "
},
{
	"uri": "http://example.org/coding/mongodb/",
	"title": "MongoDB",
	"tags": [],
	"description": "",
	"content": "Execute script file in mongo shell\nmongo localhost:27017/acommeassure aca_parametrage.js Array not empty :\ndb.getCollection('acaDocument').find({ 'associations.contrats': { $exists: true, $not: {$size: 0} } }) Date \u0026gt; :\n'historiqueDocument.creation.date': {\u0026quot;$gte\u0026quot;:new Date(\u0026quot;2020-01-01\u0026quot;)} "
},
{
	"uri": "http://example.org/coding/nock/",
	"title": "Nock (Mock API calls)",
	"tags": [],
	"description": "",
	"content": "Mock API call :\nconst nock = require(\u0026#34;nock\u0026#34;); nock(\u0026#34;http://api.service:8080\u0026#34;) .defaultReplyHeaders({ \u0026#39;access-control-allow-origin\u0026#39;: \u0026#39;*\u0026#39;, \u0026#39;access-control-allow-credentials\u0026#39;: \u0026#39;true\u0026#39; }) .get(\u0026#34;/api/contrat/signature/matching\u0026#34;) .reply(200, { license: { key: \u0026#34;mit\u0026#34;, name: \u0026#34;MIT License\u0026#34;, spdx_id: \u0026#34;MIT\u0026#34;, url: \u0026#34;https://api.github.com/licenses/mit\u0026#34;, node_id: \u0026#34;MDc6TGljZW5zZTEz\u0026#34;, }, }); Mock Express middleware (Response) :\nconst mockResponse = () =\u0026gt; { const res = {}; res.status = jest.fn().mockReturnValue(res); res.json = jest.fn().mockReturnValue(res); res.send = jest.fn().mockReturnValue(res); return res; }; const res = mockResponse(); const test = await creation.sendMailDocuments(sendMailBody, res); // utiliser .send ou .json en fonction de la fonction. expect(res.json).toBeCalledWith({ \u0026#34;errorDetail\u0026#34;: \u0026#34;L\u0026#39;envoie de mail avec les documents a échoué\u0026#34; }); expect(res.status).toBeCalledWith(500); "
},
{
	"uri": "http://example.org/coding/nodejs/",
	"title": "NodeJs",
	"tags": [],
	"description": "",
	"content": "Transform callback TO Promise -\u0026gt; util.promisify\nconst util = require(\u0026#39;util\u0026#39;); ..... const promisified = util.promisify(envoyerMailTemplateDynamique); await promisified(codeMarqueBlanche, extraParams, to, template); "
},
{
	"uri": "http://example.org/coding/languages/javascript/object/",
	"title": "Object",
	"tags": [],
	"description": "",
	"content": "Object is empty : const a = {}; Object.keys(a).length // 0 (not empty returns 1) "
},
{
	"uri": "http://example.org/web/public-api/",
	"title": "public API",
	"tags": [],
	"description": "",
	"content": "Public APIs\n"
},
{
	"uri": "http://example.org/web/static-site-generators/",
	"title": "Static Site Generators",
	"tags": [],
	"description": "",
	"content": "   2021_05_17  Gatsby Hugo Jekyll     Learning curve  higher lesser    Language  JavaScript Go Ruby   Based on framework  React Go Liquid   Features  More Less    Plugins  To install lot of already included    Build speed  100 ms 15 sec      Usage :  Documentation website -\u0026gt; Hugo  "
},
{
	"uri": "http://example.org/coding/languages/javascript/string/",
	"title": "String",
	"tags": [],
	"description": "",
	"content": "Extract part of an array or a string (new array) -\u0026gt; slice() const array = \u0026#39;hello world\u0026#39;; const result = array.slice(0,5); console.log(result); // hello Split string by separator -\u0026gt; split() const string = \u0026#39;hello,world\u0026#39;; const result = string.split(\u0026#34;,\u0026#34;); console.log(result); // [\u0026#34;hello\u0026#34;, \u0026#34;world\u0026#34;] "
},
{
	"uri": "http://example.org/tools/",
	"title": "Tools",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/web/",
	"title": "Web",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]