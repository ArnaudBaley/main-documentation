<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on My New Hugo Site</title>
    <link>http://example.org/</link>
    <description>Recent content in Home on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 May 2021 15:54:59 +0200</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Commands</title>
      <link>http://example.org/web/static-site-generators/hugo/commands/</link>
      <pubDate>Tue, 18 May 2021 15:55:39 +0200</pubDate>
      
      <guid>http://example.org/web/static-site-generators/hugo/commands/</guid>
      <description>Create site :   Create site &amp;ldquo;documentation&amp;rdquo;:
hugo new site documentation   Launch server (with autoreload) :
hugo server   http://localhost:1313
Install a theme :   Install theme :
cd /themes git clone https://github.com/matcornic/hugo-theme-learn.git   Activate new theme in config.toml :
theme = &amp;#34;hugo-theme-learn&amp;#34;   Create first post :   Create chapter (contains post) static-website-generators
cd .. hugo new --kind chapter static-website-generators/_index.md   Create post hugo in chapter static-website-generators :</description>
    </item>
    
    <item>
      <title>Settings</title>
      <link>http://example.org/web/static-site-generators/hugo/settings/</link>
      <pubDate>Tue, 18 May 2021 15:55:39 +0200</pubDate>
      
      <guid>http://example.org/web/static-site-generators/hugo/settings/</guid>
      <description>Build destination folder Set build destination folder (config.toml) to docs instead of public:
publishDir = &amp;#34;docs&amp;#34; </description>
    </item>
    
    <item>
      <title>Settings</title>
      <link>http://example.org/web/static-site-generators/hugo/themes/learn/settings/</link>
      <pubDate>Tue, 18 May 2021 15:55:39 +0200</pubDate>
      
      <guid>http://example.org/web/static-site-generators/hugo/themes/learn/settings/</guid>
      <description>Change logo Create file /layouts/partials/logo.html :
&amp;lt;img style=&amp;#34;border-radius: 50%; max-width: 70%;&amp;#34; src=&amp;#34;https://avatars.githubusercontent.com/u/22755712?v=4&amp;#34;&amp;gt; </description>
    </item>
    
    <item>
      <title>Deployment</title>
      <link>http://example.org/web/static-site-generators/hugo/deployment/</link>
      <pubDate>Tue, 18 May 2021 15:59:32 +0200</pubDate>
      
      <guid>http://example.org/web/static-site-generators/hugo/deployment/</guid>
      <description>On gitHub Pages : SOURCE.
  Test git submodules in repository (Hugo theme could be a git submodule).
  Activate relative URL in Hugo settings.
  Activate pages on GitHub repository.
  Set GitHub pages branch to docs.
  Create GitHub Token.
  Add token as secret into repository.
  Activate auto build on push -&amp;gt; see &amp;ldquo;Tools &amp;gt; GitHub &amp;gt; Actions (workflow)&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Troubleshoot</title>
      <link>http://example.org/web/static-site-generators/hugo/troubleshoot/</link>
      <pubDate>Tue, 18 May 2021 15:59:32 +0200</pubDate>
      
      <guid>http://example.org/web/static-site-generators/hugo/troubleshoot/</guid>
      <description>404 on css, js : Activate relative URL instead of absolute (default) :
config.toml :
relativeURLs = true </description>
    </item>
    
    <item>
      <title>Setup</title>
      <link>http://example.org/web/pwa-progressive-web-app/setup/</link>
      <pubDate>Tue, 18 May 2021 15:58:47 +0200</pubDate>
      
      <guid>http://example.org/web/pwa-progressive-web-app/setup/</guid>
      <description>Create basic HTML &amp;amp; CSS for the future WPA : a. index.html
&amp;lt;!doctype html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Hello World&amp;lt;/title&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;css/style.css&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;theme-color&amp;#34; content=&amp;#34;white&amp;#34;/&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body class=&amp;#34;fullscreen&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;container&amp;#34;&amp;gt; &amp;lt;h1 class=&amp;#34;title&amp;#34;&amp;gt;Hello World!&amp;lt;/h1&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; b. css/style.css
body { font-family: sans-serif; } /* Make content area fill the entire browser window */ html, .fullscreen { display: flex; height: 100%; margin: 0; padding: 0; width: 100%; } /* Center the content in the browser window */ .</description>
    </item>
    
    <item>
      <title>Notifications</title>
      <link>http://example.org/web/pwa-progressive-web-app/notifications/</link>
      <pubDate>Tue, 18 May 2021 15:58:47 +0200</pubDate>
      
      <guid>http://example.org/web/pwa-progressive-web-app/notifications/</guid>
      <description>https://developer.mozilla.org/fr/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push
-Notification API (different of push API)
Example of notification (without push) :
window.onload = () =&amp;gt; { &amp;#39;use strict&amp;#39;; if (&amp;#39;serviceWorker&amp;#39; in navigator) { navigator.serviceWorker .register(&amp;#39;./sw.js&amp;#39;); } requestNotifPermission(); } const games = [{ slug: &amp;#39;lost-in-cyberspace&amp;#39;, name: &amp;#39;Lost in Cyberspace&amp;#39;, author: &amp;#39;Zosia and Bartek&amp;#39;, twitter: &amp;#39;bartaz&amp;#39;, website: &amp;#39;&amp;#39;, github: &amp;#39;github.com/bartaz/lost-in-cyberspace&amp;#39; }, { slug: &amp;#39;vernissage&amp;#39;, name: &amp;#39;Vernissage&amp;#39;, author: &amp;#39;Platane&amp;#39;, twitter: &amp;#39;platane_&amp;#39;, website: &amp;#39;github.com/Platane&amp;#39;, github: &amp;#39;github.com/Platane/js13k-2017&amp;#39; }, { slug: &amp;#39;emma-3d&amp;#39;, name: &amp;#39;Emma-3D&amp;#39;, author: &amp;#39;Prateek Roushan&amp;#39;, twitter: &amp;#39;&amp;#39;, website: &amp;#39;&amp;#39;, github: &amp;#39;github.</description>
    </item>
    
    <item>
      <title>Design Patterns</title>
      <link>http://example.org/coding/languages/javascript/design-patterns/</link>
      <pubDate>Tue, 18 May 2021 15:55:39 +0200</pubDate>
      
      <guid>http://example.org/coding/languages/javascript/design-patterns/</guid>
      <description>Sources :
 JavaScript Design Patterns (BetterProgramming)  List            Module Organize code, encapsulation.     Observer Update an object when an another object changes (see : $emit et $broadcast in JS frameworks).     Prototype “skeleton” of an existing object to create or instantiate new objects.     Singleton Only one instance of a singleton class can exist     Constructor Based on class.</description>
    </item>
    
    <item>
      <title>GitHub</title>
      <link>http://example.org/tools/github/</link>
      <pubDate>Tue, 18 May 2021 15:55:39 +0200</pubDate>
      
      <guid>http://example.org/tools/github/</guid>
      <description>Activate pages -Repository -&amp;gt; Settings -&amp;gt; Options -&amp;gt; GitHub Pages
Actions (workflow) Create file : .github/workflows/workflow.yml
Example (auto build hugo static site generator on push) :
name: CI on: push jobs: deploy: runs-on: ubuntu-18.04 steps: - name: Git checkout uses: actions/checkout@v2 - name: Update theme  run: git submodule update --init --recursive - name: Setup hugo uses: peaceiris/actions-hugo@v2 - name: Build run: hugo - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: personal_token: ${{ secrets.</description>
    </item>
    
    <item>
      <title>Kata JS</title>
      <link>http://example.org/learning/js-kata/</link>
      <pubDate>Tue, 18 May 2021 15:55:39 +0200</pubDate>
      
      <guid>http://example.org/learning/js-kata/</guid>
      <description>Even Or Odd : function even_or_odd(number) { if (number % 2 === 0) return &amp;#39;Even&amp;#39;; return &amp;#39;Odd&amp;#39;; } console.log(even_or_odd(4)) // Even console.log(even_or_odd(5)) // Odd Opposite number : function opposite(number) { return -number } console.log(opposite(5)) // -5 </description>
    </item>
    
  </channel>
</rss>
